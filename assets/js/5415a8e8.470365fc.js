"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[617],{4455:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>c,toc:()=>u});var o=n(5893),r=n(1151);const t={slug:"/register-consensus-key",sidebar_position:3},i="Register your Consensus Key",c={id:"register-consensus-key",title:"Register your Consensus Key",description:"At the end of this guide,  your baker will be set up to bake with the consensus key. Make sure you followed the previous guide: Deploy a Consensus Signer.",source:"@site/docs/register-consensus-key.md",sourceDirName:".",slug:"/register-consensus-key",permalink:"/tezos-serverless-signer-apps/register-consensus-key",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/register-consensus-key.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{slug:"/register-consensus-key",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Deploy an In-Memory Signer",permalink:"/tezos-serverless-signer-apps/deploy-in-memory-signer"}},a={},u=[{value:"Import Consensus Public Key into baker",id:"import-consensus-public-key-into-baker",level:2},{value:"Start the consensus key baker process",id:"start-the-consensus-key-baker-process",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{id:"register-your-consensus-key",children:"Register your Consensus Key"}),"\n",(0,o.jsxs)(s.p,{children:["At the end of this guide,  your baker will be set up to bake with the consensus key. Make sure you followed the previous guide: ",(0,o.jsx)(s.a,{href:"deploy-consensus-signer",children:"Deploy a Consensus Signer"}),"."]}),"\n",(0,o.jsx)(s.p,{children:"We will assume your baker address is in a Ledger device."}),"\n",(0,o.jsx)(s.p,{children:"In order to bake using the KMS, we need to register the KMS Public Key as consensus key."}),"\n",(0,o.jsx)(s.p,{children:"This is an on-chain operation to be performed on your baker."}),"\n",(0,o.jsx)(s.p,{children:"For more information about Consensus Keys, read:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://midl-dev.medium.com/a-consensus-key-for-tezos-bakers-16a3ac8178cf",children:"A Consensus Key for Tezos Bakers"})," by MIDL.dev"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://tezos.gitlab.io/user/key-management.html#consensus-key",children:"Consensus Key"})," from Octez Documentation."]}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"import-consensus-public-key-into-baker",children:"Import Consensus Public Key into baker"}),"\n",(0,o.jsx)(s.p,{children:"At the previous step, you retrieved the Remote Signer URL of the Consensus Key from the AWS Console."}),"\n",(0,o.jsx)(s.p,{children:"Now, on your baker, import it (replace with the URL from your AWS account):"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"octez-client --endpoint https://rpc.tzbeta.net import secret key acme-consensus \\\n  https://xxxxxxxxxx.execute-api.us-east-2.amazonaws.com/prod/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/tz2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n"})}),"\n",(0,o.jsx)(s.p,{children:"You should see the address added with the correct public key hash."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"Tezos address added: tz2E3CrMygbvk5wggB3J6XWZvY6HfzQyzZD5\n"})}),"\n",(0,o.jsx)(s.p,{children:"Then, with the Ledger connected and the Wallet app open, issue the command:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"octez-client --endpoint https://rpc.tzbeta.net set consensus key for acme-bakery to acme-consensus\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Replace ",(0,o.jsx)(s.code,{children:"acme-bakery"})," with your baker alias."]}),"\n",(0,o.jsx)(s.p,{children:"Confirm the operation on the Ledger screen."}),"\n",(0,o.jsx)(s.p,{children:"Following this operation, it takes 6 cycles for the consensus key to become active. Until then, you must bake using the Ledger device as usual."}),"\n",(0,o.jsxs)(s.p,{children:["You may check that your consensus key was registered properly on the ",(0,o.jsx)(s.a,{href:"https://tzkt.io/update_consensus_key",children:"TzKT Consensus Key Page"}),". This also indicates the activation cycle of your consensus key."]}),"\n",(0,o.jsx)(s.h2,{id:"start-the-consensus-key-baker-process",children:"Start the consensus key baker process"}),"\n",(0,o.jsxs)(s.p,{children:["At the activation cycle of your consensus key, the existing baker process (set to ",(0,o.jsx)(s.code,{children:"bake for"})," your baker address) will no longer bake or attest anything."]}),"\n",(0,o.jsx)(s.p,{children:"Therefore you need to start a new baker process, in parallel to your existing baker process, baking for the consensus key."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"octez-baker-<proto> run with local node ~/.tezos-node acme-consensus --liquidity-baking-toggle-vote pass\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Replace the proto with actual protocol, ",(0,o.jsx)(s.code,{children:"acme-consensus"})," with your baker alias, and add any commands you might be using on the other baker."]}),"\n",(0,o.jsxs)(s.p,{children:["This is ",(0,o.jsx)(s.strong,{children:"similar to a Tezos protocol upgrade"}),". Therefore, you might run two baker processes in parallel: one for the baking key and one for the consensus key. The baking operations will switch seamlessly."]})]})}function d(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>i});var o=n(7294);const r={},t=o.createContext(r);function i(e){const s=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(t.Provider,{value:s},e.children)}}}]);